import{_ as a,c as e,o as t,a2 as r}from"./chunks/framework.B8ScJZFy.js";const m=JSON.parse('{"title":"IP","description":"","frontmatter":{},"headers":[],"relativePath":"Network Layer/IP.md","filePath":"Network Layer/IP.md","lastUpdated":1718269166000}'),o={name:"Network Layer/IP.md"},i=r('<h1 id="ip" tabindex="-1">IP <a class="header-anchor" href="#ip" aria-label="Permalink to &quot;IP&quot;">​</a></h1><h2 id="header" tabindex="-1">header <a class="header-anchor" href="#header" aria-label="Permalink to &quot;header&quot;">​</a></h2><p>20 bytes</p><h2 id="consist" tabindex="-1">consist <a class="header-anchor" href="#consist" aria-label="Permalink to &quot;consist&quot;">​</a></h2><ol><li>network part</li><li>host id</li></ol><h2 id="classify" tabindex="-1">classify <a class="header-anchor" href="#classify" aria-label="Permalink to &quot;classify&quot;">​</a></h2><h2 id="fragmentation" tabindex="-1">Fragmentation <a class="header-anchor" href="#fragmentation" aria-label="Permalink to &quot;Fragmentation&quot;">​</a></h2><p>when the size of a packet is greater that the MTU of the media, the router will split the packet into small fragment.</p>',8),s=[i];function n(l,h,c,d,_,f){return t(),e("div",null,s)}const u=a(o,[["render",n]]);export{m as __pageData,u as default};
