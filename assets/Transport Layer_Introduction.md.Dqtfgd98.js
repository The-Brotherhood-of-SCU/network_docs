import{_ as t,c as e,o as r,a2 as o}from"./chunks/framework.B8ScJZFy.js";const y=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"Transport Layer/Introduction.md","filePath":"Transport Layer/Introduction.md","lastUpdated":1714967188000}'),n={name:"Transport Layer/Introduction.md"},l=o('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h1><ul><li>provide <strong>logical communication</strong> between application processes running on different hosts</li><li>transport protocols run in <strong>end systems</strong></li><li>transport layer relies on, enhances network layer services</li></ul><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;">transport layer</th><th style="text-align:center;">network layer</th></tr></thead><tbody><tr><td style="text-align:center;">data transfer</td><td style="text-align:center;">between processes</td><td style="text-align:center;">between end systems</td></tr></tbody></table><h2 id="transport-layer-protocols" tabindex="-1">transport-layer protocols <a class="header-anchor" href="#transport-layer-protocols" aria-label="Permalink to &quot;transport-layer protocols&quot;">​</a></h2><p><strong>Internet transport services</strong></p><ul><li><strong>TCP</strong><blockquote><p>reliable, in order unicast delivery</p></blockquote><ul><li>congestion control</li><li>flow control</li><li>connection setup</li></ul></li><li><strong>UDP</strong><blockquote><p>unreliable(&quot;best-effort&quot;), unordered unicast or multicast delivery</p></blockquote></li><li>services not available <ul><li>real-time</li><li>bandwidth guarantees</li><li>reliable multicast</li></ul></li></ul>',6),a=[l];function i(s,c,d,u,p,h){return r(),e("div",null,a)}const b=t(n,[["render",i]]);export{y as __pageData,b as default};
