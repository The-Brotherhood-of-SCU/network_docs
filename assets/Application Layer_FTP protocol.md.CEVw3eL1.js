import{_ as t,c as e,o as r,a2 as n}from"./chunks/framework.B8ScJZFy.js";const x=JSON.parse('{"title":"FTP Protocol","description":"","frontmatter":{},"headers":[],"relativePath":"Application Layer/FTP protocol.md","filePath":"Application Layer/FTP protocol.md","lastUpdated":1714973223000}'),o={name:"Application Layer/FTP protocol.md"},a=n('<h1 id="ftp-protocol" tabindex="-1">FTP Protocol <a class="header-anchor" href="#ftp-protocol" aria-label="Permalink to &quot;FTP Protocol&quot;">​</a></h1><h2 id="file-transfer-protocol-文件传输协议" tabindex="-1"><strong>File Transfer Protocol(文件传输协议)</strong> <a class="header-anchor" href="#file-transfer-protocol-文件传输协议" aria-label="Permalink to &quot;**File Transfer Protocol(文件传输协议)**&quot;">​</a></h2><p>client/server model</p><ul><li>client: initiates transfer(to/from remote)</li><li>server: remote host <ul><li>maintains &quot;state&quot;: current directory, earlier authentication, stateful</li></ul></li></ul><p>transport protocol - <strong>TCP</strong><br> FTP - <strong>RFC 959</strong> Port - <strong>21</strong></p><h2 id="two-parallel-tcp-connections" tabindex="-1"><strong>Two parallel TCP connections</strong> <a class="header-anchor" href="#two-parallel-tcp-connections" aria-label="Permalink to &quot;**Two parallel TCP connections**&quot;">​</a></h2><ul><li>Control: exchange commands, responses between client and server (<strong>out of band control</strong>)</li><li>Data: file data to/from server</li></ul><table><thead><tr><th style="text-align:center;">command</th><th style="text-align:center;">parameter</th><th style="text-align:center;">usage</th></tr></thead><tbody><tr><td style="text-align:center;">USER</td><td style="text-align:center;">username</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">PASS</td><td style="text-align:center;">password</td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">LIST</td><td style="text-align:center;"></td><td style="text-align:center;">return list of file in current directory</td></tr><tr><td style="text-align:center;">RETR</td><td style="text-align:center;">filename</td><td style="text-align:center;">retrieves(gets) file</td></tr><tr><td style="text-align:center;">STOR</td><td style="text-align:center;">filename</td><td style="text-align:center;">stores(puts) file onto remote host</td></tr></tbody></table><table><thead><tr><th style="text-align:center;">status code</th><th style="text-align:center;">introduction</th></tr></thead><tbody><tr><td style="text-align:center;">331</td><td style="text-align:center;">Username OK, password required</td></tr><tr><td style="text-align:center;">125</td><td style="text-align:center;">data connection already open, transfer starting</td></tr><tr><td style="text-align:center;">425</td><td style="text-align:center;">can’t open data connection</td></tr><tr><td style="text-align:center;">452</td><td style="text-align:center;">error writing file</td></tr></tbody></table>',9),l=[a];function s(i,c,d,p,g,h){return r(),e("div",null,l)}const f=t(o,[["render",s]]);export{x as __pageData,f as default};
